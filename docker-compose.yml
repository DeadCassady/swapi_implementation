services:
  postgres:
    image: postgres:15-alpine
    container_name: movie_lib_db
    restart: always
    env_file:
      - .db.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nestjs:
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
        - /usr/src/app/node_modules
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt 
      - ./certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    command: certonly --webroot -w /var/www/certbot --email nikita.tatarin2019@gmail.com -d ntatarynovych.stud.shpp.me
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 168h & wait $${!}; done;'"

volumes:
  postgres_data:
